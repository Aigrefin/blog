= Projets informatiques : voulez vous être rapide ou prévisible ?
Julien Kirch
v0.1, 2017-01-25
:article_lang: fr
:article_description: Mais elles n'iront pas jusqu'à changer pour les résoudre

== Présentation des algo

* Prévisible
* Rapide
*	Exemples : téléphone vs. courier

== Le problème

*	Ils se ressemblent mais sont différents
*	Exemple : buffer, passer du temps à prévoir, droit à l'erreur
*	C'est un continuum
*	Pas de bon ou de mauvais choix, ça dépend de tes objectifs
** Projet indépendanct
** Projet industriel ou coordination
* Problème : quand tu es à un autre endroit que tu ne le penses
** Tu utilises les mauvais outils
** Ça ne fonctionne pas et tu ne comprends pas pourquoi

== Pour les projets

*	Agile : optimiser pour la vitesse
*	Cycle en V et qualité par process : optimisé pour la prévisibilité
* Orga agile : s'organiser pour pouvoir faire de l'agile, ne plus avoir les contraintes du mode industriel
*	Beaucoup de personnes qui utilisent une méthode agile mais qui gardent les reflexes du V
**	Burn down chart, obsession de la vélocité régulière
*	Des process qui se font passer pour de l'agile, car c'est un buzzword, mais qui veulent de la prédictibilité
**	Scaled
* Certains des bénéfices de l'agile sont désirables, et certaines pratiques sont utiles même hors agile
* Mais si tu connais pas ta position, tu risques de ne pas comprendre ce qui se passe

== Conclusion
Sachez où vous êtes, et vérifiez régulièrement
